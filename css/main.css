/* COMMON */
body {
  color: #333;
  font-size: 16px; /* 대부분의 브라우저 16px부터 시작하지만 명시적으로 지정해주기 */
  font-weight: 400; /* 일반적 두께 */
  line-height: 1.4; /* 행간 */
  font-family: 'Nanum Gothic', sans-serif;
  height: 3000px;
}
img {
  display: block;
}
a {
  text-decoration: none;
}
/*
* 프로젝트에서 사용하는 모든 inner에 대한 공통 CSS 지정
* 별도의 높이는 없고, 가운데 정렬, 위치상의 부모요소가 될 수 있는 기준
*/
.inner {
  width: 1100px;
  margin: 0 auto;
  position: relative;
}
.btn {
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  color: #333;
  font-size: 16px;
  font-weight: 700;
  text-align: center;
  cursor: pointer;
  box-sizing: border-box;
  display: block; /* 혹시 a 태그나 span 태그에 .btn class 부여했을 때도 정상적으로 버튼 모양 나올 수 있도록 */
  transition: 0.4s; /* 버튼에 마우스 올리면 색, 모양등 변화 있을 때 자연스럽게 전환되도록 */
}
.btn:hover {
  color: #fff;
  background-color: #333;
}
.btn.btn--reverse {
  color: #fff;
  background-color: #333;
}
.btn.btn--reverse:hover {
  color: #333;
  background-color: transparent;
}
.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
}
.btn.btn--brown:hover {
  color: #fff;
  background-color: #592b18;
}
.btn.btn--gold {
  color: #d9aa8a;
  border-color: #d9aa8a;
}
.btn.btn--gold:hover {
  color: #fff;
  background-color: #d9aa8a;
}
.btn.btn--white {
  color: #fff;
  border-color: #fff;
}
.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

/* HEADER */
header {
  width: 100%;
  background-color: #f6f5f0;
  border-bottom: 1px solid #c8c8c8;
  position: fixed;
  top: 0;
  z-index: 9;
}
header > .inner {
  height: 120px;
}
header .logo {
  height: 75px; /* 로고 img 높이 */
  position: absolute; /* 부모요소 기준으로 '배치' */
  /* 위, 아래 기준점 잡아줌 */
  top: 0;
  bottom: 0;
  /* 지정해된 높이값(반드시 명시되어 있어야 함)과 top, bottom 기준점을 바탕으로 auto로 수직 margin 계산 */
  left: 0;
  margin: auto;
}
header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}
header .sub-menu ul.menu {
  font-family: Arial, sans-serif;
  display: flex;
}
header .sub-menu ul.menu li {
  position: relative;
}
/* 각 li 태그 앞에 구분선 추가 */
header .sub-menu ul.menu li::before {
  /* 글자 적지 추가하지 않을 거면 빈값으로 반드시 추가해야 가상요소 생김 */
  content: '';
  width: 1px;
  height: 12px;
  background-color: #e5e5e5;
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto;
}
/* 맨 앞의 구분선 안 보이도록 */
header .sub-menu ul.menu li:first-child::before {
  display: none;
}
header .sub-menu ul.menu li a {
  font-size: 12px;
  padding: 11px 16px;
  display: block;
  color: #656565;
}
header .sub-menu ul.menu li a:hover {
  color: #000;
}
header .sub-menu .search {
  height: 34px;
  position: relative; /* .material-icons의 위치상 부모요소 될 수 있도록 추가 */
}
header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  box-sizing: border-box;
  border-radius: 5px;
  outline: none; /* input 클릭했을 때 내부 라인 없앰 */
  background-color: #fff; /* 브라우저에 따라 기본 input 색상 다를 수 있어서 흰색 지정 */
  color: #777;
  font-size: 12px;
  transition: width 0.4s; /* 요소 자연스럽게 변화하도록 전환효과 추가 - 기본 all */
}
header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}
header .sub-menu .search .material-icons {
  height: 24px;
  position: absolute; /* 구조적인 부모요소에 position 값 있는지 확인! */
  top: 0;
  bottom: 0;
  right: 5px;
  margin: auto;
  transition: 0.4s; /* 0.4초 동안 돋보기 천천히 사라짐 */
}
header .sub-menu .search.focused .material-icons {
  opacity: 0; /* 돋보기 투명하게 만들어서 안보이게 */
}

header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  z-index: 1;
  display: flex;
}
header .main-menu .item {
}
header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}
header .main-menu .item:hover .item__name {
  background-color: #2c2a29;
  color: #669900;
  border-radius: 6px 6px 0 0;
}
header .main-menu .item .item__contents {
  width: 100%;
  position: fixed;
  left: 0;
  /* 
  * top이나 bottom을 사용하지 않아서 수직 위치 값이 없다면, 요소의 원래 위치 그대로 사용
  * 만약, position: absolute를 사용했다면, (위치상) 부모요소를 기준으로 하므로, 화면의 뷰포트 좌우 끝까지 늘어날 수 없게 됨 */
  display: none;
}
header .main-menu .item:hover .item__contents {
  display: block;
}
header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}
header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}
header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}
header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}
header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}
header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url('../images/main_menu_pattern.jpg');
}
header .main-menu .item .item__contents .contents__texture h4 {
  color: #999;
  font-weight: 700;
}
header .main-menu .item .item__contents .contents__texture p {
  color: #669900;
  margin: 4px 0 14px;
}
header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}
header .badges .badge {
  border-radius: 10px;
  overflow: hidden;
  margin-bottom: 12px;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* VISUAL */
/** 너무 많이 중복되는 요소 생략 가능
  * 단지 요소 감싸는 중간요소, 구조 만들기 위해 넣었던 요소들 빼줘도 됨
  ex) .inner는 .visual section 중앙에 몰아주는 역할이지 visual과 직접적인 연관 없기 때문에
  .visual .inner .title -> .visual .title 이런식으로 생략가능 */
.visual {
  margin-top: 120px;
  background-image: url('../images/visual_bg.jpg');
  background-position: center;
}
.visual .inner {
  height: 646px;
}
.visual .title {
  position: absolute;
  top: 88px;
  left: -10px;
}
.visual .title .btn {
  position: absolute;
  top: 259px;
  left: 173px;
}
.visual .cup1.image {
  position: absolute;
  bottom: 0;
  right: -47px;
}
.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}
.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}
.visual .cup2.text {
  position: absolute;
  top: 321px;
  right: 416px;
}
.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}
.visual .fade-in {
  opacity: 0;
}
/* NOTICE */
.notice {
}
.notice .notice-line {
  position: relative;
}
.notice .notice-line .bg-left {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333;
}
.notice .notice-line .bg-right {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
}
.notice .notice-line .inner {
  height: 62px;
  display: flex;
}
.notice .notice-line .inner__left {
  width: 60%;
  height: 100%;
  background-color: #333;
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left h2 {
  color: #fff;
  font-size: 17px;
  font-weight: 700;
  margin-right: 20px;
}
.notice .notice-line .inner__left .swiper {
  height: 62px;
  flex-grow: 1; /* 최대한 늘어나도록 */
}
.notice .notice-line .inner__left .swiper-slide {
  height: 62px;
  display: flex;
  align-items: center;
}
.notice .notice-line .inner__left .swiper-slide a {
  color: #fff;
}
.notice .notice-line .inner__left .notice-line__more {
  width: 62px;
  height: 62px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__left .notice-line__more .material-icons {
  color: #fff;
  font-size: 30px;
}
.notice .notice-line .inner__right {
  width: 40%;
  height: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
}
.notice .notice-line .inner__right h2 {
  font-size: 17px;
  font-weight: 700;
}
.notice .notice-line .inner__right .toggle-promotion {
  width: 62px;
  height: 62px;
  cursor: pointer;
  display: flex;
  justify-content: center;
  align-items: center;
}
.notice .notice-line .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}
